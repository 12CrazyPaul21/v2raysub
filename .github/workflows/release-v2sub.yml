name: v2raysub Release

on:
    push:
        tags:
            - 'v*'

jobs:
    build:
        uses: ./.github/workflows/build-and-test-v2sub.yml
    release:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Git checkout
              uses: actions/checkout@v2

            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: '3.x'

            - name: Install Dependencies
              run: |
                python -m pip install --upgrade pip
                pip install setuptools wheel twine
                
            - name: Get v2sub version
              id: get_version
              run: |
                version=$(python setup.py --version)
                dist_file_name=v2raysub-${version}-py3-none-any.whl
                echo "version=$version" >> "$GITHUB_OUTPUT"
                echo "dist_file_name=$dist_file_name" >> "$GITHUB_OUTPUT"

            - name: Download Build Artifact
              uses: actions/download-artifact@v4
              with:
                name: v2sub-build-dist
                path: dist
            
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.V2SUB_ACTION_TOKEN }}
              with:
                tag_name: ${{ github.ref }}
                release_name: v2sub ${{ github.ref }} Release
                draft: false
                prerelease: false

            - name: Upload Release Asset (v2sub wheel)
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.V2SUB_ACTION_TOKEN }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./dist/${{ steps.get_version.outputs.dist_file_name }}
                asset_name: ${{ steps.get_version.outputs.dist_file_name }}
                asset_content_type: application/octet-stream

            - name: Publish Package
              env:
                TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
                TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
              run: twine upload --repository pypi dist/*